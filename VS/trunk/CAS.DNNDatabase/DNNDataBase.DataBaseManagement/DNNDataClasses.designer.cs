#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAS.DNNDataBase.DataBaseManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="intranetdnn")]
	public partial class DNNDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdnn1_UserAuthentication(dnn1_UserAuthentication instance);
    partial void Updatednn1_UserAuthentication(dnn1_UserAuthentication instance);
    partial void Deletednn1_UserAuthentication(dnn1_UserAuthentication instance);
    partial void Insertdnn1_User(dnn1_User instance);
    partial void Updatednn1_User(dnn1_User instance);
    partial void Deletednn1_User(dnn1_User instance);
    partial void Insertdnn1_UserPortal(dnn1_UserPortal instance);
    partial void Updatednn1_UserPortal(dnn1_UserPortal instance);
    partial void Deletednn1_UserPortal(dnn1_UserPortal instance);
    partial void Insertdnn1_UserProfile(dnn1_UserProfile instance);
    partial void Updatednn1_UserProfile(dnn1_UserProfile instance);
    partial void Deletednn1_UserProfile(dnn1_UserProfile instance);
    #endregion
		
		public DNNDataClassesDataContext() : 
				base(global::CAS.DNNDataBase.DataBaseManagement.Properties.Settings.Default.intranetdnnConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNNDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dnn1_UserAuthentication> dnn1_UserAuthentications
		{
			get
			{
				return this.GetTable<dnn1_UserAuthentication>();
			}
		}
		
		public System.Data.Linq.Table<dnn1_User> dnn1_Users
		{
			get
			{
				return this.GetTable<dnn1_User>();
			}
		}
		
		public System.Data.Linq.Table<dnn1_UserPortal> dnn1_UserPortals
		{
			get
			{
				return this.GetTable<dnn1_UserPortal>();
			}
		}
		
		public System.Data.Linq.Table<dnn1_UserProfile> dnn1_UserProfiles
		{
			get
			{
				return this.GetTable<dnn1_UserProfile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn1_UserAuthentication")]
	public partial class dnn1_UserAuthentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAuthenticationID;
		
		private int _UserID;
		
		private string _AuthenticationType;
		
		private string _AuthenticationToken;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<dnn1_User> _dnn1_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAuthenticationIDChanging(int value);
    partial void OnUserAuthenticationIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAuthenticationTypeChanging(string value);
    partial void OnAuthenticationTypeChanged();
    partial void OnAuthenticationTokenChanging(string value);
    partial void OnAuthenticationTokenChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn1_UserAuthentication()
		{
			this._dnn1_User = default(EntityRef<dnn1_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAuthenticationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAuthenticationID
		{
			get
			{
				return this._UserAuthenticationID;
			}
			set
			{
				if ((this._UserAuthenticationID != value))
				{
					this.OnUserAuthenticationIDChanging(value);
					this.SendPropertyChanging();
					this._UserAuthenticationID = value;
					this.SendPropertyChanged("UserAuthenticationID");
					this.OnUserAuthenticationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn1_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AuthenticationType
		{
			get
			{
				return this._AuthenticationType;
			}
			set
			{
				if ((this._AuthenticationType != value))
				{
					this.OnAuthenticationTypeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationType = value;
					this.SendPropertyChanged("AuthenticationType");
					this.OnAuthenticationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationToken", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string AuthenticationToken
		{
			get
			{
				return this._AuthenticationToken;
			}
			set
			{
				if ((this._AuthenticationToken != value))
				{
					this.OnAuthenticationTokenChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationToken = value;
					this.SendPropertyChanged("AuthenticationToken");
					this.OnAuthenticationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn1_User_dnn1_UserAuthentication", Storage="_dnn1_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn1_User dnn1_User
		{
			get
			{
				return this._dnn1_User.Entity;
			}
			set
			{
				dnn1_User previousValue = this._dnn1_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn1_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn1_User.Entity = null;
						previousValue.dnn1_UserAuthentications.Remove(this);
					}
					this._dnn1_User.Entity = value;
					if ((value != null))
					{
						value.dnn1_UserAuthentications.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("dnn1_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn1_Users")]
	public partial class dnn1_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<dnn1_UserAuthentication> _dnn1_UserAuthentications;
		
		private EntitySet<dnn1_UserPortal> _dnn1_UserPortals;
		
		private EntitySet<dnn1_UserProfile> _dnn1_UserProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public dnn1_User()
		{
			this._dnn1_UserAuthentications = new EntitySet<dnn1_UserAuthentication>(new Action<dnn1_UserAuthentication>(this.attach_dnn1_UserAuthentications), new Action<dnn1_UserAuthentication>(this.detach_dnn1_UserAuthentications));
			this._dnn1_UserPortals = new EntitySet<dnn1_UserPortal>(new Action<dnn1_UserPortal>(this.attach_dnn1_UserPortals), new Action<dnn1_UserPortal>(this.detach_dnn1_UserPortals));
			this._dnn1_UserProfiles = new EntitySet<dnn1_UserProfile>(new Action<dnn1_UserProfile>(this.attach_dnn1_UserProfiles), new Action<dnn1_UserProfile>(this.detach_dnn1_UserProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn1_User_dnn1_UserAuthentication", Storage="_dnn1_UserAuthentications", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn1_UserAuthentication> dnn1_UserAuthentications
		{
			get
			{
				return this._dnn1_UserAuthentications;
			}
			set
			{
				this._dnn1_UserAuthentications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn1_User_dnn1_UserPortal", Storage="_dnn1_UserPortals", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<dnn1_UserPortal> dnn1_UserPortals
		{
			get
			{
				return this._dnn1_UserPortals;
			}
			set
			{
				this._dnn1_UserPortals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn1_User_dnn1_UserProfile", Storage="_dnn1_UserProfiles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<dnn1_UserProfile> dnn1_UserProfiles
		{
			get
			{
				return this._dnn1_UserProfiles;
			}
			set
			{
				this._dnn1_UserProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dnn1_UserAuthentications(dnn1_UserAuthentication entity)
		{
			this.SendPropertyChanging();
			entity.dnn1_User = this;
		}
		
		private void detach_dnn1_UserAuthentications(dnn1_UserAuthentication entity)
		{
			this.SendPropertyChanging();
			entity.dnn1_User = null;
		}
		
		private void attach_dnn1_UserPortals(dnn1_UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.dnn1_User = this;
		}
		
		private void detach_dnn1_UserPortals(dnn1_UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.dnn1_User = null;
		}
		
		private void attach_dnn1_UserProfiles(dnn1_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn1_User = this;
		}
		
		private void detach_dnn1_UserProfiles(dnn1_UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.dnn1_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn1_UserPortals")]
	public partial class dnn1_UserPortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PortalId;
		
		private int _UserPortalId;
		
		private System.DateTime _CreatedDate;
		
		private bool _Authorised;
		
		private bool _IsDeleted;
		
		private bool _RefreshRoles;
		
		private EntityRef<dnn1_User> _dnn1_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserPortalIdChanging(int value);
    partial void OnUserPortalIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnAuthorisedChanging(bool value);
    partial void OnAuthorisedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRefreshRolesChanging(bool value);
    partial void OnRefreshRolesChanged();
    #endregion
		
		public dnn1_UserPortal()
		{
			this._dnn1_User = default(EntityRef<dnn1_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._dnn1_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPortalId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UserPortalId
		{
			get
			{
				return this._UserPortalId;
			}
			set
			{
				if ((this._UserPortalId != value))
				{
					this.OnUserPortalIdChanging(value);
					this.SendPropertyChanging();
					this._UserPortalId = value;
					this.SendPropertyChanged("UserPortalId");
					this.OnUserPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorised", DbType="Bit NOT NULL")]
		public bool Authorised
		{
			get
			{
				return this._Authorised;
			}
			set
			{
				if ((this._Authorised != value))
				{
					this.OnAuthorisedChanging(value);
					this.SendPropertyChanging();
					this._Authorised = value;
					this.SendPropertyChanged("Authorised");
					this.OnAuthorisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshRoles", DbType="Bit NOT NULL")]
		public bool RefreshRoles
		{
			get
			{
				return this._RefreshRoles;
			}
			set
			{
				if ((this._RefreshRoles != value))
				{
					this.OnRefreshRolesChanging(value);
					this.SendPropertyChanging();
					this._RefreshRoles = value;
					this.SendPropertyChanged("RefreshRoles");
					this.OnRefreshRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn1_User_dnn1_UserPortal", Storage="_dnn1_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn1_User dnn1_User
		{
			get
			{
				return this._dnn1_User.Entity;
			}
			set
			{
				dnn1_User previousValue = this._dnn1_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn1_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn1_User.Entity = null;
						previousValue.dnn1_UserPortals.Remove(this);
					}
					this._dnn1_User.Entity = value;
					if ((value != null))
					{
						value.dnn1_UserPortals.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("dnn1_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dnn1_UserProfile")]
	public partial class dnn1_UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileID;
		
		private int _UserID;
		
		private int _PropertyDefinitionID;
		
		private string _PropertyValue;
		
		private string _PropertyText;
		
		private int _Visibility;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<dnn1_User> _dnn1_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyTextChanging(string value);
    partial void OnPropertyTextChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public dnn1_UserProfile()
		{
			this._dnn1_User = default(EntityRef<dnn1_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._dnn1_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="Int NOT NULL")]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(3750)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PropertyText
		{
			get
			{
				return this._PropertyText;
			}
			set
			{
				if ((this._PropertyText != value))
				{
					this.OnPropertyTextChanging(value);
					this.SendPropertyChanging();
					this._PropertyText = value;
					this.SendPropertyChanged("PropertyText");
					this.OnPropertyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dnn1_User_dnn1_UserProfile", Storage="_dnn1_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dnn1_User dnn1_User
		{
			get
			{
				return this._dnn1_User.Entity;
			}
			set
			{
				dnn1_User previousValue = this._dnn1_User.Entity;
				if (((previousValue != value) 
							|| (this._dnn1_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dnn1_User.Entity = null;
						previousValue.dnn1_UserProfiles.Remove(this);
					}
					this._dnn1_User.Entity = value;
					if ((value != null))
					{
						value.dnn1_UserProfiles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("dnn1_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
